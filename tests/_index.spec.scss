@use 'true' as *;
@use '../index' as * with ($host: 'test', $suffix: '');

:host {
  @include var(--defined-color, red);
}

@include describe('@use \'scoped-var\' as *;') {
  @include describe('var(--defined-color)') {   
    @include it('should equal `--defined-color-SCOPED-IN-test`') {
      @include assert-equal(var(--defined-color), unquote("var(--defined-color-SCOPED-IN-test)"));
    } 
  }
  
  @include describe('var(--undefined-color)') {
    @include it('should equal `--undefined-color`') {
      @include assert-equal(var(--undefined-color), unquote("var(--undefined-color)"));
    }
  }
  
  @include describe('@mixin var()') {
    @include it('should be success') {
      @include assert {
        @include output {
          :host {
            @include var(--color, red);
          }
        }
  
        @include expect {
          :host {
            --color: red;
            --color-SCOPED-IN-test: var(--color);
          }
        }
      }
    }
  }

  @include describe('@mixin external-var($name)') {
    @include it('should be success') {
      @include assert {
        @include output {
          :host {
            @include external-property(--color);
          }
        }

        @include expect {
          :host {
            --color-SCOPED-IN-test: var(--color);
          }
        }
      }
    }
  }
}
